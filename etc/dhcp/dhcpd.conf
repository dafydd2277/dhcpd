#
# DHCP Server Configuration file.
#   see /usr/share/doc/dhcp*/dhcpd.conf.sample
#
allow bootp;
ddns-update-style interim;
update-static-leases on;
authoritative;
set vendorclass = option vendor-class-identifier;


# You can create a secret string to share between `dhcpd` and `named`
# to allow `dhcpd` to update DNS records as hosts request IP addresses.
# See the installation notes for more information.
key dhcpupdate {
  algorithm hmac-md5;
  secret FIXME;
}

zone 1.168.192.in-addr.arpa. {
  primary 192.168.1.1;
  key dhcpupdate;
}

zone internal.example.com. {
  primary 192.168.1.1;
  key dhcpupdate;
}


# Create a fake subnet for the pod internal network. Without this,
# `dhcpd` will throw an error and fail at startup.
subnet 172.53.67.0 netmask 255.255.255.0 {
  ignore client-updates;
  deny unknown-clients;
}


# Configure the subnet you're managing.
subnet 192.168.1.0 netmask 255.255.255.0 {
  option routers 192.168.1.1;
  option domain-name-servers 192.168.1.1;
  option ntp-servers 192.168.1.1;
  default-lease-time 86400;                 # 1 day
  max-lease-time 604800;                    # 7 days
  use-host-decl-names on;
  allow client-updates;
  ddns-updates on;

  option domain-name "internal.example.com";
  ddns-domainname "internal.example.com";
  ddns-rev-domainname "in-addr.arpa";
  next-server 192.168.1.2;
  filename "pxelinux.0";


  # Reserve IP addresses for certain important hosts, or hosts that
  # need a consistent IP address. (This is a frequent workaround for
  # managing Oracle hosts, where Oracle wants fixed addresses, but the
  # network team wants centralized IP address management.)
  group # known hosts
  {
    host alpha.internal.example.com { hardware ethernet 1a:2b:3c:4d:5e:6f;
                                      fixed-address 192.168.1.3;
                                      option host-name "alpha";
                                      ddns-hostname "alpha";
                                    }
  }

  # Create a pool of IP addresses for other hosts that request them.
  pool
  {
    allow unknown-clients;
    one-lease-per-client true;
    ping-check true;
    range 192.168.1.101 192.168.1.150;
  }
}


# If necessary, you can identify other subnets for dhcpd to
# specifically ignore.
subnet 10.0.0.0 netmask 255.0.0.0 {
  ignore client-updates;
  deny unknown-clients;
}

